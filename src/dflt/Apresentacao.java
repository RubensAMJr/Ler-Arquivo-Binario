/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dflt;

import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Rubens Augusto Montibeller Jr , Artur Dallagnelo
 */
public class Apresentacao extends javax.swing.JFrame {

    private ArrayList<Animal> animais;
    private SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    private int nmrRelatorio = 1;

    /**
     * Creates new form Apresentacao
     */
    public Apresentacao() {
        initComponents();
        animais = CarregarAnimais("animais.dat");
        String str = "";
        for (Animal animal : animais) {
            str += "Id: " + animal.getIdentificacao() + "\n";
            for (Historico historico : animal.getHistoricos()) {
                str += "-----------------------" + "\n";
                str += "Data: " + historico.getData() + "\n";
                str += "Peso: " + historico.getPeso() + "\n";
                str += "Altura: " + historico.getAltura() + "\n";
                str += "Temperatura: " + historico.getTempetatura() + "\n";
                str += "-----------------------" + "\n";
            }
            str += "***********************" + "\n";
        }
        txtAnimal.setText(str);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomArq = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        localizarbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAnimal = new javax.swing.JTextArea();
        btnLerHistoricos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nome do arquivo:");

        nomArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomArqActionPerformed(evt);
            }
        });

        jButton1.setText("Gravar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText(".dat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomArq, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addComponent(jButton1))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomArq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Identificação:");

        localizarbtn.setText("Localizar");
        localizarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localizarbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(localizarbtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(localizarbtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtAnimal.setColumns(20);
        txtAnimal.setRows(5);
        jScrollPane1.setViewportView(txtAnimal);

        btnLerHistoricos.setText("Ler Historicos");
        btnLerHistoricos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLerHistoricosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLerHistoricos)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLerHistoricos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomArqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomArqActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            File file = new File(nomArq.getText() + ".dat");
            DataInputStream arq2 = new DataInputStream(new FileInputStream(file));
            Animal an;
            Historico hs;
            Date data = formato.parse(arq2.readUTF());

            while (true) {
                //Lista Temporaria
                List<Animal> ls = new ArrayList();
                //Lista para relatorio
                List<Animal> relatorio = new ArrayList();
                try {
                    //Se a lista esta vazia
                    if (animais.isEmpty()) {
                        an = new Animal(arq2.readInt());
                        hs = new Historico();
                        hs.setData(data);
                        hs.setPeso(arq2.readDouble());
                        hs.setAltura(arq2.readShort());
                        hs.setTempetatura(arq2.readDouble());
                        an.addHistorico(hs);
                        animais.add(an);
                        relatorio.add(an);
                        //Se ja tem algo
                    } else {
                        int index = 0;
                        boolean jaExiste = false;
                        int identificacao = arq2.readInt();
                        hs = new Historico();
                        hs.setData(data);
                        hs.setPeso(arq2.readDouble());
                        hs.setAltura(arq2.readShort());
                        hs.setTempetatura(arq2.readDouble());
                        for (Animal animal : animais) {
                            //Se ja existe
                            if (animal.getIdentificacao() == identificacao) {
                                jaExiste = true;
                                animal.addHistorico(hs);
                                animais.set(index, animal);
                                relatorio.add(animal);
                            }
                            index++;
                        }
                        if (jaExiste == false) {
                            an = new Animal(identificacao);
                            an.addHistorico(hs);
                            animais.add(an);
                            relatorio.add(an);
                        }
                    }
                } catch (EOFException e) {
                    ObjectOutputStream arquivo = new ObjectOutputStream(new FileOutputStream("animais.dat"));
                    arquivo.writeObject(animais);
                    arquivo.close();
                    File fl = new File("Relatorio " + nmrRelatorio + ".txt");
                    FileWriter arqTexto = new FileWriter(fl);
                    String str = "Relatorio: ";
                    for (Animal animal : animais) {
                        str += "******************" + "\n";
                        for (Historico historico : animal.getHistoricos()) {
                            str += "-----------------------" + "\n";
                            str += "Data: " + formato.format(historico.getData()) + "\n";
                            str += "Peso: " + historico.getPeso() + "\n";
                            str += "Altura: " + historico.getAltura() + "\n";
                            str += "Temperatura: " + historico.getTempetatura() + "\n";
                            str += "-----------------------" + "\n";
                        }
                    }
                    nmrRelatorio++;
                    arqTexto.write(str);
                    arqTexto.write(System.getProperty("line.separator"));
                    arqTexto.close();
                    arq2.close();
                }
            }
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Arquivo não encontrado");
        } catch (IOException l) {
        } catch (ParseException e) {
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void localizarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localizarbtnActionPerformed
        int id = Integer.parseInt(txtId.getText());
        String str = "Animal não localizado";
        for (Animal animal : animais) {
            if (animal.getIdentificacao() == id) {
                str = "*********Identificação: " + id + "*********" + "\n";
                for (Historico historico : animal.getHistoricos()) {
                    str += "-----------------------" + "\n";
                    str += "Data: " + historico.getData() + "\n";
                    str += "Peso: " + historico.getPeso() + "\n";
                    str += "Altura: " + historico.getAltura() + "\n";
                    str += "Temperatura: " + historico.getTempetatura() + "\n";
                    str += "-----------------------" + "\n";
                }
            }
            txtAnimal.setText(str);
        }
    }//GEN-LAST:event_localizarbtnActionPerformed

    private void btnLerHistoricosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLerHistoricosActionPerformed
        for (Animal animal : animais) {
            String str = "******************" + "\n";
            for (Historico historico : animal.getHistoricos()) {
                str += "-----------------------" + "\n";
                str += "Data: " + historico.getData() + "\n";
                str += "Peso: " + historico.getPeso() + "\n";
                str += "Altura: " + historico.getAltura() + "\n";
                str += "Temperatura: " + historico.getTempetatura() + "\n";
                str += "-----------------------" + "\n";
            }

            txtAnimal.setText(str);
        }
    }//GEN-LAST:event_btnLerHistoricosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Apresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Apresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Apresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Apresentacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Apresentacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLerHistoricos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton localizarbtn;
    private javax.swing.JTextField nomArq;
    private javax.swing.JTextArea txtAnimal;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    private ArrayList<Animal> CarregarAnimais(String path) {
        ArrayList<Animal> animais;
        try {
            ObjectInputStream file = new ObjectInputStream(new FileInputStream(path));
            animais = (ArrayList<Animal>) file.readObject();
            file.close();
        } catch (FileNotFoundException fnfe) {
            animais = new ArrayList();
        } catch (IOException ioe) {
            animais = new ArrayList();
        } catch (ClassNotFoundException ex) {
            animais = new ArrayList();
        }
        return animais;
    }

}
